Resources:
  simplestlambdaServiceRoleAB262352:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: V1SampleStack/simplest-lambda/ServiceRole/Resource
  simplestlambda51B49326:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7ecc77636deefb31954ea2e6aadf6d2c361a2943535a678d65f46a8de5e1f503.zip
      Description: Simplest webservice integration
      FunctionName: simplest-lambda
      Handler: index.handler
      MemorySize: 512
      Role:
        Fn::GetAtt:
          - simplestlambdaServiceRoleAB262352
          - Arn
      Runtime: nodejs18.x
      Timeout: 60
    DependsOn:
      - simplestlambdaServiceRoleAB262352
    Metadata:
      aws:cdk:path: V1SampleStack/simplest-lambda/Resource
      aws:asset:path: /home/whpark/temp/cdk-sam/v1-sample/functions/simplest-example
      aws:asset:is-bundled: false
      aws:asset:property: Code
  simplestlambdaEventInvokeConfig5C2A5BE9:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: simplestlambda51B49326
      MaximumRetryAttempts: 0
      Qualifier: $LATEST
    Metadata:
      aws:cdk:path: V1SampleStack/simplest-lambda/EventInvokeConfig/Resource
  mycdksimplewebservicev1F2007C4C:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Description: My cdk sample web service
      Name: my-cdk-simple-webservice-v1
      ProtocolType: HTTP
    Metadata:
      aws:cdk:path: V1SampleStack/my-cdk-simple-webservice-v1/Resource
  mycdksimplewebservicev1DefaultRoutelambdaIntegration7F45FDC5:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: mycdksimplewebservicev1F2007C4C
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - simplestlambda51B49326
          - Arn
      PayloadFormatVersion: "2.0"
    Metadata:
      aws:cdk:path: V1SampleStack/my-cdk-simple-webservice-v1/DefaultRoute/lambdaIntegration/Resource
  mycdksimplewebservicev1DefaultRoutelambdaIntegrationPermission29E955FD:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - simplestlambda51B49326
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: mycdksimplewebservicev1F2007C4C
            - /*/*
    Metadata:
      aws:cdk:path: V1SampleStack/my-cdk-simple-webservice-v1/DefaultRoute/lambdaIntegration-Permission
  mycdksimplewebservicev1DefaultRouteEEC0AE65:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: mycdksimplewebservicev1F2007C4C
      AuthorizationType: NONE
      RouteKey: $default
      Target:
        Fn::Join:
          - ""
          - - integrations/
            - Ref: mycdksimplewebservicev1DefaultRoutelambdaIntegration7F45FDC5
    Metadata:
      aws:cdk:path: V1SampleStack/my-cdk-simple-webservice-v1/DefaultRoute/Resource
  mycdksimplewebservicev1DefaultStage9823EEEE:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: mycdksimplewebservicev1F2007C4C
      AutoDeploy: true
      StageName: $default
    Metadata:
      aws:cdk:path: V1SampleStack/my-cdk-simple-webservice-v1/DefaultStage/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21PS26DQAw9S/aDG8KmXSaoVbOryAEiBwxyAA/CBlQh7l7NVE2lqqv3s+XnA6RZCvsdLpqUVZt0fIP1Yli2Dhe9rh32twphfZukNPbi8loe/HUmsbPMvqXcS81NSP81P2jsWZW9bI6xh7XwHYUg4OY0u6IqmcIxgNMMTlPZkp1QyeHADRot+DkfYH03G44Dh+UAQRZ+MorsLEbNiD9N/8jfuYthE+9Hsm2uIPXTWJKLBYLLEps/gryW3EvFFp8QXxHc9WlOnyF9gf3urszJOIlxT1B84xczFh+uXQEAAA==
    Metadata:
      aws:cdk:path: V1SampleStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

